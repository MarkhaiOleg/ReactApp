{"ast":null,"code":"var _jsxFileName = \"/Users/anymacstore/Desktop/myProgects/first-react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useState } from 'react';\nimport PostForm from './components/PostForm'; //import Counter from './components/Counter'\n\nimport Postitem from './components/PostItem';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyInput from './components/UI/input/MyInput';\nimport MySelect from './components/UI/select/MySelect';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'Javascript',\n    body: 'ggg'\n  }, {\n    id: 2,\n    title: 'Php',\n    body: 'hhh'\n  }, {\n    id: 3,\n    title: 'C++',\n    body: 'ooo'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedPosts = useMemo(() => {\n    console.log(12);\n\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {}, [searchQuery, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  }; //отримуємо пост з дочернього елементу\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F \\u043F\\u043E\",\n        options: [{\n          value: 'title',\n          name: 'За назвою'\n        }, {\n          value: 'body',\n          name: 'По опису'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), posts.length ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50px'\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u0438 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0456!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Kuy8a2d+hnEy0xk4zpsnEbXZTws=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anymacstore/Desktop/myProgects/first-react-app/src/App.js"],"names":["React","useMemo","useRef","useState","PostForm","Postitem","PostList","MyButton","MyInput","MySelect","App","posts","setPosts","id","title","body","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedPosts","console","log","sort","a","b","localeCompare","sortedAndSearchedPosts","createPost","newPost","removePost","post","filter","p","sortPosts","margin","e","target","value","name","length","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState } from 'react'\nimport PostForm from './components/PostForm'\n//import Counter from './components/Counter'\nimport Postitem from './components/PostItem'\nimport PostList from './components/PostList'\nimport MyButton from './components/UI/button/MyButton'\nimport MyInput from './components/UI/input/MyInput'\nimport MySelect from './components/UI/select/MySelect'\nimport './styles/App.css'\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: 'Javascript', body: 'ggg' },\n    { id: 2, title: 'Php', body: 'hhh' },\n    { id: 3, title: 'C++', body: 'ooo' },\n  ])\n\n  const [selectedSort, setSelectedSort] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const sortedPosts = useMemo(() => {\n    console.log(12)\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n    } return posts;\n  }, [selectedSort, posts])\n\n  const sortedAndSearchedPosts = useMemo(() => {\n\n  }, [searchQuery, sortedPosts])\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n  }\n\n  //отримуємо пост з дочернього елементу\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n  }\n\n  const sortPosts = (sort) => {\n    setSelectedSort(sort);\n  }\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{ margin: \"15px 0\" }} />\n      <div>\n        <MyInput\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          placeholder=\"Пошук...\"\n        />\n        <MySelect\n          value={selectedSort}\n          onChange={sortPosts}\n          defaultValue=\"Сортування по\"\n          options={[\n            { value: 'title', name: 'За назвою' },\n            { value: 'body', name: 'По опису' },\n          ]}\n        />\n      </div>\n      {posts.length\n        ? < PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постів\" />\n        : <h1 style={{ textAlign: 'center', marginTop: '50px' }}>Пости не знайдені!</h1>\n      }\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}