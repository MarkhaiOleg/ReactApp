{"ast":null,"code":"var _jsxFileName = \"/Users/anymacstore/Desktop/myProgects/first-react-app/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PostService from '../components/API/PostServise';\nimport { useFetching } from '../components/hooks/useFetching';\nimport Loader from '../components/UI/loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchCommnets, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello World = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"Z/cd0p70YVGUU7K7INQlVM4fYZ4=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["/Users/anymacstore/Desktop/myProgects/first-react-app/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","PostService","useFetching","Loader","PostIdPage","params","post","setPost","fetchPostById","isLoading","error","id","response","getById","data","fetchCommnets","isComLoading","comError","getCommentsByPostId","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCR,WAAW,CAAC,MAAOS,EAAP,IAAc;AAChE,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBF,EAApB,CAAvB;AACAJ,IAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACH,GAHoD,CAArD;AAKA,QAAM,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,QAA9B,IAA0Cf,WAAW,CAAC,MAAOS,EAAP,IAAc;AACtE,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACiB,mBAAZ,CAAgCP,EAAhC,CAAvB;AACAJ,IAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACH,GAH0D,CAA3D;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa,CAACH,MAAM,CAACM,EAAR,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA,mCAAmBN,MAAM,CAACM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,SAAS,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAEJ;AAAA,iBAAMH,IAAI,CAACK,EAAX,QAAiBL,IAAI,CAACa,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJV,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5BD;;GAAMf,U;UACaJ,S,EAE2BE,W,EAKMA,W;;;KAR9CE,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport PostService from '../components/API/PostServise'\nimport { useFetching } from '../components/hooks/useFetching'\nimport Loader from '../components/UI/loader/Loader'\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState({})\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\n        const response = await PostService.getById(id)\n        setPost(response.data)\n    })\n\n    const [fetchCommnets, isComLoading, comError] = useFetching(async (id) => {\n        const response = await PostService.getCommentsByPostId(id)\n        setPost(response.data)\n    })\n\n\n    useEffect(() => {\n        fetchPostById(params.id)\n    }, [])\n\n    return (\n        <div>\n            <h1>hello World = {params.id}</h1>\n            {isLoading\n                ? <Loader />\n                : <div>{post.id}. {post.title}</div>\n            }\n            <h1>Коментарі</h1>\n        </div>\n    )\n}\n\nexport default PostIdPage;\n"]},"metadata":{},"sourceType":"module"}