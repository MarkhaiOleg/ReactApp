{"ast":null,"code":"var _jsxFileName = \"/Users/anymacstore/Desktop/myProgects/first-react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport PostService from './components/API/PostServise';\nimport { useFetching } from './components/hooks/useFetching';\nimport { usePots } from './components/hooks/usePosts';\nimport PostFilter from './components/PostFilter';\nimport PostForm from './components/PostForm';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton';\nimport Loader from './components/UI/loader/Loader';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport './styles/App.css';\nimport { getPageCount } from './utils/pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePots(posts, filter.sort, filter.query);\n  let pagesArray = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const responce = await PostService.getAll(limit, page);\n    setPosts(responce.data);\n    const totalCount = responce.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  }; //отримуємо пост з дочернього елементу\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '15px'\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u0438\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 89\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"R2AxERQcefp1ntqOcjK5swkXTh4=\", false, function () {\n  return [usePots, useFetching];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anymacstore/Desktop/myProgects/first-react-app/src/App.js"],"names":["axios","React","useEffect","useState","PostService","useFetching","usePots","PostFilter","PostForm","PostList","MyButton","Loader","MyModal","getPageCount","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","pagesArray","i","push","fetchPosts","isPostsLoading","postError","responce","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","marginTop","margin","display","justifyContent"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport PostService from './components/API/PostServise'\nimport { useFetching } from './components/hooks/useFetching'\nimport { usePots } from './components/hooks/usePosts'\nimport PostFilter from './components/PostFilter'\nimport PostForm from './components/PostForm'\nimport PostList from './components/PostList'\nimport MyButton from './components/UI/button/MyButton'\nimport Loader from './components/UI/loader/Loader'\nimport MyModal from './components/UI/MyModal/MyModal'\nimport './styles/App.css'\nimport { getPageCount } from './utils/pages'\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [filter, setFilter] = useState({ sort: '', query: '' })\n  const [modal, setModal] = useState(false)\n  const [totalPages, setTotalPages] = useState(0)\n  const [limit, setLimit] = useState(10)\n  const [page, setPage] = useState(1)\n  const sortedAndSearchedPosts = usePots(posts, filter.sort, filter.query)\n\n  let pagesArray = []\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1)\n  }\n\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const responce = await PostService.getAll(limit, page)\n    setPosts(responce.data)\n    const totalCount = responce.headers['x-total-count']\n    setTotalPages(getPageCount(totalCount, limit))\n  })\n\n  useEffect(() => {\n    fetchPosts()\n  }, [])\n\n\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n    setModal(false)\n  }\n\n  //отримуємо пост з дочернього елементу\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n  }\n\n  return (\n    <div className=\"App\">\n      <MyButton style={{ marginTop: '15px' }} onClick={() => setModal(true)}>\n        Створити користувача\n      </MyButton>\n\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n\n      <hr style={{ margin: \"15px 0\" }} />\n\n      <PostFilter\n        filter={filter}\n        setFilter={setFilter}\n      />\n      {postError &&\n        <h1>Виникла помилка ${postError}</h1>}\n      {isPostsLoading\n        ? <div style={{ display: 'flex', justifyContent: 'center', marginTop: '80px' }}><Loader /></div>\n        : <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постів\" />\n      }\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}