{"ast":null,"code":"var _jsxFileName = \"/Users/anymacstore/Desktop/myProgects/first-react-app/src/pages/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PostService from '../components/API/PostServise';\nimport { useFetching } from '../components/hooks/useFetching';\nimport { usePots } from '../components/hooks/usePosts';\nimport PostFilter from '../components/PostFilter';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport MyButton from '../components/UI/button/MyButton';\nimport Loader from '../components/UI/loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { getPageCount } from '../utils/pages';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePots(posts, filter.sort, filter.query);\n  const lastElement = useRef();\n  console.log(lastElement);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const responce = await PostService.getAll(limit, page);\n    setPosts([...posts, ...responce.data]);\n    const totalCount = responce.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {}, []);\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  }; //отримуємо пост з дочернього елементу\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '15px'\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u0438\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '80px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"D6840YyFjcYfH0ZKMDdnuiRoabk=\", false, function () {\n  return [usePots, useFetching];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/anymacstore/Desktop/myProgects/first-react-app/src/pages/Posts.jsx"],"names":["React","useEffect","useRef","useState","PostService","useFetching","usePots","PostFilter","PostForm","PostList","MyButton","Loader","MyModal","Pagination","getPageCount","Posts","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","lastElement","console","log","fetchPosts","isPostsLoading","postError","responce","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","marginTop","margin","display","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useRef, useState } from 'react'\nimport PostService from '../components/API/PostServise'\nimport { useFetching } from '../components/hooks/useFetching'\nimport { usePots } from '../components/hooks/usePosts'\nimport PostFilter from '../components/PostFilter'\nimport PostForm from '../components/PostForm'\nimport PostList from '../components/PostList'\nimport MyButton from '../components/UI/button/MyButton'\nimport Loader from '../components/UI/loader/Loader'\nimport MyModal from '../components/UI/MyModal/MyModal'\nimport Pagination from '../components/UI/pagination/Pagination'\nimport { getPageCount } from '../utils/pages'\nimport '../styles/App.css'\n\n\nfunction Posts() {\n    const [posts, setPosts] = useState([])\n    const [filter, setFilter] = useState({ sort: '', query: '' })\n    const [modal, setModal] = useState(false)\n    const [totalPages, setTotalPages] = useState(0)\n    const [limit, setLimit] = useState(10)\n    const [page, setPage] = useState(1)\n    const sortedAndSearchedPosts = usePots(posts, filter.sort, filter.query)\n    const lastElement = useRef()\n    console.log(lastElement)\n\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n        const responce = await PostService.getAll(limit, page)\n        setPosts([...posts, ...responce.data])\n        const totalCount = responce.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit))\n    })\n\n    useEffect(() => {\n\n    }, [])\n\n    useEffect(() => {\n        fetchPosts(limit, page)\n    }, [page])\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n        setModal(false)\n    }\n\n    //отримуємо пост з дочернього елементу\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n    return (\n        <div className=\"App\">\n            <MyButton style={{ marginTop: '15px' }} onClick={() => setModal(true)}>\n                Створити користувача\n             </MyButton>\n\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost} />\n            </MyModal>\n\n            <hr style={{ margin: \"15px 0\" }} />\n\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n\n            <Pagination\n                page={page}\n                changePage={changePage}\n                totalPages={totalPages}\n            />\n\n            {postError &&\n                <h1>Виникла помилка ${postError}</h1>}\n            <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постів\" />\n\n            {isPostsLoading &&\n                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '80px' }}><Loader /></div>\n            }\n\n        </div >\n    );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}